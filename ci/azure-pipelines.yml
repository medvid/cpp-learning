trigger:
- master

jobs:
- job: build_linux
  displayName: Linux build

  pool:
    vmImage: ubuntu-18.04

  steps:
  - script: |
      cmake -S . -B build/gcc-x64/Debug -GNinja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=g++ -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror"
      cd build/gcc-x64/Debug
      cmake --verbose --build .
      ctest --verbose
    displayName: "GCC x64 Debug build"

  - script: |
      cmake -S . -B build/gcc-x32/Release -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=g++ -DCMAKE_CXX_FLAGS="-m32 -Wall -Wextra -Werror"
      cd build/gcc-x32/Release
      cmake --verbose --build .
      ctest --verbose
    displayName: "GCC x32 Release build"

- job: build_windows
  displayName: Windows build

  pool:
    vmImage: windows-2019

  steps:
  - script: |
      cmake -S . -B build/msvc2019-x64/Debug -DCMAKE_BUILD_TYPE=Debug  -G "Visual Studio 16 2019" -A x64
      cd build/msvc2019-x64/Debug
      cmake --verbose --build .
      ctest --verbose
    displayName: "MSVC++ 2019 x64 Debug build"

  - script: |
      cmake -S . -B build/msvc2019-x32/Release -DCMAKE_BUILD_TYPE=Release  -G "Visual Studio 16 2019" -A Win32
      cd build/msvc2019-x32/Release
      cmake --verbose --build .
      ctest --verbose
    displayName: "MSVC++ 2019 x32 Debug build"

- job: build_macos
  displayName: MacOS build

  pool:
    vmImage: macos-10.14

  steps:
  - script: |
      cmake -S . -B build/xcode/Release -DCMAKE_BUILD_TYPE=Release  -G "Xcode"
      cd build/xcode/Release
      cmake --verbose --build .
      ctest --verbose
    displayName: "Xcode Release build"
